{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishi\\\\Documents\\\\brainbolt-frontend\\\\src\\\\pages\\\\TechniquesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Header from '../components/Header'; // Adjust the import path as necessary\nimport Footer from '../components/Footer';\nimport TechniqueCard from '../components/TechniqueCard';\nimport Loader from '../components/Loader';\nimport Button from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TechniquesPage = ({\n  techniques,\n  onSelectTechnique\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const handleSelectTechnique = technique => {\n    setLoading(true); // Set loading state to true when a technique is selected\n    onSelectTechnique(technique);\n    setLoading(false); // Set loading state back to false after selection\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center flex-grow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold\",\n        children: \"Recommended Brainstorming Techniques\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), loading ?\n      /*#__PURE__*/\n      // Conditional rendering based on loading state\n      _jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"mt-4 w-full max-w-lg\",\n        children: techniques.map((technique, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(TechniqueCard, {\n            technique: technique\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            label: \"Select Technique\",\n            onClick: () => handleSelectTechnique(technique)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(TechniquesPage, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = TechniquesPage;\nexport default TechniquesPage;\nvar _c;\n$RefreshReg$(_c, \"TechniquesPage\");","map":{"version":3,"names":["React","useState","Header","Footer","TechniqueCard","Loader","Button","jsxDEV","_jsxDEV","TechniquesPage","techniques","onSelectTechnique","_s","loading","setLoading","handleSelectTechnique","technique","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","label","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rishi/Documents/brainbolt-frontend/src/pages/TechniquesPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Header from '../components/Header'; // Adjust the import path as necessary\r\nimport Footer from '../components/Footer';\r\nimport TechniqueCard from '../components/TechniqueCard';\r\nimport Loader from '../components/Loader';\r\nimport Button from '../components/Button';\r\n\r\nconst TechniquesPage = ({ techniques, onSelectTechnique }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSelectTechnique = (technique) => {\r\n        setLoading(true); // Set loading state to true when a technique is selected\r\n        onSelectTechnique(technique);\r\n        setLoading(false); // Set loading state back to false after selection\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col h-screen bg-gray-100\">\r\n            <Header />\r\n\r\n            <div className=\"flex flex-col items-center justify-center flex-grow\">\r\n                <h2 className=\"text-2xl font-bold\">Recommended Brainstorming Techniques</h2>\r\n                {loading ? ( // Conditional rendering based on loading state\r\n                    <Loader />\r\n                ) : (\r\n                    <ul className=\"mt-4 w-full max-w-lg\">\r\n                        {techniques.map((technique, index) => (\r\n                            <li key={index} className=\"mb-2\">\r\n                                <TechniqueCard technique={technique} />\r\n                                <Button\r\n                                    label=\"Select Technique\"\r\n                                    onClick={() => handleSelectTechnique(technique)}\r\n                                />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )}\r\n            </div>\r\n\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TechniquesPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,sBAAsB,CAAC,CAAC;AAC3C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,qBAAqB,GAAIC,SAAS,IAAK;IACzCF,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBH,iBAAiB,CAACK,SAAS,CAAC;IAC5BF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,oBACIN,OAAA;IAAKS,SAAS,EAAC,oCAAoC;IAAAC,QAAA,gBAC/CV,OAAA,CAACN,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVd,OAAA;MAAKS,SAAS,EAAC,qDAAqD;MAAAC,QAAA,gBAChEV,OAAA;QAAIS,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3ET,OAAO;MAAA;MAAK;MACTL,OAAA,CAACH,MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEVd,OAAA;QAAIS,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAC/BR,UAAU,CAACa,GAAG,CAAC,CAACP,SAAS,EAAEQ,KAAK,kBAC7BhB,OAAA;UAAgBS,SAAS,EAAC,MAAM;UAAAC,QAAA,gBAC5BV,OAAA,CAACJ,aAAa;YAACY,SAAS,EAAEA;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvCd,OAAA,CAACF,MAAM;YACHmB,KAAK,EAAC,kBAAkB;YACxBC,OAAO,EAAEA,CAAA,KAAMX,qBAAqB,CAACC,SAAS;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA,GALGE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAENd,OAAA,CAACL,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAACV,EAAA,CAnCIH,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AAqCpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}